<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-4.1.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-4.1.xsd
			http://www.directwebremoting.org/schema/spring-dwr
    		http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd">

	<!-- 默认的注解映射的支持,第二层开始是解决配置response传递数据给前台乱码 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
     			<property name="supportedMediaTypes">
     	 			<list>
       				<value>application/json</value>
      			</list>
     			</property>
			</bean -->
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 启动aspectj 切入点不是接口就加上 proxy-target-class="true" -->
	<aop:aspectj-autoproxy />
	
	
	<!-- 自动扫描 -->
	<context:component-scan base-package="springMVC.NLoveB.service.quartz" />
	<context:component-scan base-package="springMVC.NLoveB.plugs.siteMap" />
	<context:component-scan base-package="springMVC.NLoveB.Advicebean" />
	<context:component-scan base-package="springMVC.NLoveB.Command" />
	<context:component-scan base-package="springMVC.NLoveB.controller" />
	<context:component-scan base-package="springMVC.NLoveB.service" />
	<context:component-scan base-package="springMVC.NLoveB.dao" />

	<!-- 声明使用注解的风格 -->
	<context:annotation-config />
	
	<!-- 定义拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
		    <!-- 拦截所有的请求，验证是否是有效的IP地址 -->
			<mvc:mapping path="/**/**.do" />
			<bean id="tokenAllInterceptor" class="springMVC.NLoveB.interceptor.init" />
		</mvc:interceptor>
		<mvc:interceptor>
		    <!-- 拦截所有的请求，返回对应的广告数据 -->
			<mvc:mapping path="/**/**.html" />
			<bean id="tokenAllhtmlInterceptor" class="springMVC.NLoveB.interceptor.inithtml" />
		</mvc:interceptor>
		<mvc:interceptor>
		    <!-- 用户中心的验证 -->
			<mvc:mapping path="/user/admin/**" />
			<bean id="tokenuseradmin" class="springMVC.NLoveB.interceptor.Tokenuseradmin" />
		</mvc:interceptor>
		<mvc:interceptor>
		    <!-- 管理员的验证 -->
			<mvc:mapping path="/admin/**" />
			<bean id="tokenadmin" class="springMVC.NLoveB.interceptor.Tokenadmin" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 静态资源不过滤直接访问，否则图片等资源无法访问 web.xml,已配置拦截 .do 所以这里可不需要，如果添加任然有效 -->
	<mvc:resources location="/WEB-INF/resource/" mapping="res/**/**.**" />
	<mvc:resources location="/WEB-INF/upload/" mapping="upload/images/**/**.**" />
	<mvc:resources location="/WEB-INF/uploadblog/" mapping="wp-content/uploads/**/**.**" />
	<mvc:resources location="/WEB-INF/resource_lib/lib/" mapping="liger/lib/**/**.**"/>
	<mvc:resources location="/ueditor/" mapping="/ueditor/**/**"/>
	
	<!-- 基于Cookie的本地化解析器 -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieMaxAge" value="604800" />
		<property name="defaultLocale" value="zh_CN" />
		<property name="cookieName" value="Language"></property>
	</bean>
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
	</bean>

	<!-- 配置上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!--  ``````````````````这里配置计划任务`````````````` -->
	<!-- 使用spring新型更新  -->
	<bean id="spring_quartzjob" class="springMVC.NLoveB.service.quartz.cleanuserlost">
		<property name="command">
			<value>清零操作</value>
		</property>
	</bean>
	<bean id="spring_SiteMapJob" class="springMVC.NLoveB.service.quartz.SiteMapQuartz">
	</bean>
	<!-- 指定方法位置 -->
	<bean id="MethodInvoking" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="spring_quartzjob" />
		<property name="targetMethod" value="test" />
	</bean>
	<bean id="MethodInvoking1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="spring_SiteMapJob" />
		<property name="targetMethod" value="siteMapQuartz" />
	</bean>
	
	<!-- 表达式触发器-2， 指定时间执行任务 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="MethodInvoking" />
		<property name="cronExpression">
			<!-- 00秒 00分 00 小时  每天 每月 的这个时候来执行这个方法 -->
			<value>15 17 02 * * ?</value>
		</property>
	</bean>
	<bean id="cronTrigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="MethodInvoking1" />
		<property name="cronExpression">
			<!-- 00秒 00分 00 小时  每天 每月 的这个时候来执行这个方法 -->
			<value>15 05 00 * * ?</value>
		</property>
	</bean>
	<!-- 启动任务 -->
	<bean id="quartzFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger"/>
				<ref bean="cronTrigger1"/>
			</list>
		</property>
	</bean>
</beans>