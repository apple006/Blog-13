<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
>
	<!-- 加载数据库连接配置信息-->
    <bean id="DBconfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">
	      <value>classpath:modelxml/jdbc.properties</value>
	    </property>
  	</bean>
	<!-- calss是DataSource实现类 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
    	<property name="url" value="${jdbc.url}" />
    	<property name="driverClassName" value="${jdbc.driver}" />
  	</bean>
  	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<!-- 连接数据源（注入dataSource） -->
			<ref bean="dataSource"/>
		</property>
		
		<property name="hibernateProperties">
			<props>
				<!-- 配置数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!-- 自动生成数据库 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.characterEncoding">UTF-8</prop>

				<!-- sql语句显示 -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<!-- 开启二级缓存 ehcache http://blog.csdn.net/fengshizty/article/details/43603611 -->  
				<!-- prop key="hibernate.cache.use_second_level_cache">true</prop -->
				<!-- 开启查询的二级缓存  如果不需要就不设置-->  
				<!-- prop key="hibernate.cache.use_query_cache">true</prop -->
				<!-- Hibernate4.0以上设置factory -->  
				<!-- prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop -->  
				<!-- 二级缓存 ehcache的配置文件位置 -->  
				<!-- prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:modelxml/ehcache.xml</prop --> 
			</props>
		</property>
		<property name="packagesToScan"  value="springMVC.NLoveB.po" />
	</bean>
	<!-- 注入sessionFactory -->
	<bean id="HibernateUtil" class="springMVC.NLoveB.utils.HibernateUtil">
      <property name="sessionFactory" ref="sessionFactory"/>
  	</bean>
  	
  	
  	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 以下开始配置事务管理 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="changed*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="(execution(* springMVC.NLoveB.dao.iter.*.*(..)))" id="userloginPC"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="userloginPC"/>
	</aop:config>
	<!-- 配置事务管理结束 -->
</beans>